# Generated by Django 3.2.19 on 2024-03-09 10:23

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('utilities', '0003_institutetype_location'),
        ('emp', '0076_jobshortlist_app_status'),
    ]

    operations = [
        migrations.CreateModel(
            name='JobDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=250, verbose_name='Designation (Job Position)')),
                ('salary_range_min', models.IntegerField(blank=True, null=True, verbose_name='Annual Salary (Minimum)')),
                ('salary_range_max', models.IntegerField(blank=True, null=True, verbose_name='Annual Salary (Maximum)')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_approval', 'pending approval'), ('published', 'Published'), ('closed', 'Closed')], default='draft', max_length=20)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Job Description')),
                ('requirements', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Qualifications/Skills Required')),
                ('key_job_responsibilities', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Key Job Responsibilities')),
                ('shift_time', models.CharField(blank=True, max_length=200, null=True)),
                ('gender', models.CharField(choices=[('a', 'No Criteria'), ('f', 'F-Female Candidates'), ('m', 'M-Male Candidates')], default='a', max_length=10)),
                ('last_app_date', models.DateTimeField(blank=True, null=True, verbose_name='Last Application Date')),
                ('num_vacancies', models.IntegerField(blank=True, default=1, null=True)),
                ('slug', models.SlugField(blank=True, max_length=250, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('city_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='utilities.city')),
            ],
        ),
        migrations.AlterModelOptions(
            name='student',
            options={'ordering': ('-date_created', '-date_updated')},
        ),
        migrations.RemoveField(
            model_name='company',
            name='rating',
        ),
        migrations.AlterField(
            model_name='job',
            name='city_job',
            field=models.ManyToManyField(related_name='jobs1', to='utilities.City'),
        ),
        migrations.AlterField(
            model_name='job',
            name='degree',
            field=models.ManyToManyField(blank=True, null=True, related_name='degrees1', to='emp.Degree'),
        ),
        migrations.AlterField(
            model_name='job',
            name='discipline',
            field=models.ManyToManyField(blank=True, null=True, related_name='disciplines1', to='emp.Discipline'),
        ),
        migrations.AlterField(
            model_name='job',
            name='job_foss',
            field=models.ManyToManyField(blank=True, null=True, related_name='fosses1', to='emp.Foss'),
        ),
        migrations.AlterField(
            model_name='job',
            name='skills',
            field=models.ManyToManyField(related_name='jobs1', to='emp.Skill'),
        ),
        migrations.CreateModel(
            name='StudentFilterYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emp.jobdetail')),
            ],
        ),
        migrations.CreateModel(
            name='StudentFilterLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='utilities.city')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location', to='emp.jobdetail')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='utilities.state')),
            ],
        ),
        migrations.CreateModel(
            name='StudentFilterInstituteType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('insti_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='utilities.institutetype')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emp.jobdetail')),
            ],
        ),
        migrations.AddField(
            model_name='jobdetail',
            name='company',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='emp.company'),
        ),
        migrations.AddField(
            model_name='jobdetail',
            name='degree',
            field=models.ManyToManyField(blank=True, null=True, related_name='degrees', to='emp.Degree'),
        ),
        migrations.AddField(
            model_name='jobdetail',
            name='discipline',
            field=models.ManyToManyField(blank=True, null=True, related_name='disciplines', to='emp.Discipline'),
        ),
        migrations.AddField(
            model_name='jobdetail',
            name='domain',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='emp.domain', verbose_name='Job Sector'),
        ),
        migrations.AddField(
            model_name='jobdetail',
            name='job_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emp.jobtype'),
        ),
        migrations.AddField(
            model_name='jobdetail',
            name='skills',
            field=models.ManyToManyField(blank=True, null=True, related_name='jobs', to='emp.Skill'),
        ),
        migrations.AddField(
            model_name='jobdetail',
            name='state_job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='utilities.state'),
        ),
        migrations.CreateModel(
            name='StudentFilterFoss',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Mandatory', 'Mandatory'), ('Optional', 'Optional')], default='Mandatory', max_length=20)),
                ('status', models.BooleanField(default=True)),
                ('grade', models.IntegerField(blank=True, default=60, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('foss', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='utilities.fosscategory')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emp.jobdetail')),
            ],
            options={
                'unique_together': {('job', 'foss')},
            },
        ),
    ]
